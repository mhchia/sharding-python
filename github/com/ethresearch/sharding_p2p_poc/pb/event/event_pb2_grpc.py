# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from github.com.ethresearch.sharding_p2p_poc.pb.event import event_pb2 as github_dot_com_dot_ethresearch_dot_sharding__p2p__poc_dot_pb_dot_event_dot_event__pb2


class EventStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Receive = channel.unary_unary(
        '/proto.event.Event/Receive',
        request_serializer=github_dot_com_dot_ethresearch_dot_sharding__p2p__poc_dot_pb_dot_event_dot_event__pb2.ReceiveRequest.SerializeToString,
        response_deserializer=github_dot_com_dot_ethresearch_dot_sharding__p2p__poc_dot_pb_dot_event_dot_event__pb2.ReceiveResponse.FromString,
        )


class EventServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def Receive(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_EventServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Receive': grpc.unary_unary_rpc_method_handler(
          servicer.Receive,
          request_deserializer=github_dot_com_dot_ethresearch_dot_sharding__p2p__poc_dot_pb_dot_event_dot_event__pb2.ReceiveRequest.FromString,
          response_serializer=github_dot_com_dot_ethresearch_dot_sharding__p2p__poc_dot_pb_dot_event_dot_event__pb2.ReceiveResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'proto.event.Event', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
